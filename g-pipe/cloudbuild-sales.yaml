steps:
  # decrypt .env
  - name: gcr.io/cloud-builders/gcloud
    id: "Decrypt environment variables"
    args:
      - kms
      - decrypt
      - --ciphertext-file=backend/api-sales/.env.enc
      - --plaintext-file=backend/api-sales/.env
      - --location=global
      - --keyring=$_KEYRING
      - --key=$_KEY
  # pull previous image to speed up docker build
  - name: "gcr.io/cloud-builders/docker"
    id: "Pull"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker pull gcr.io/$PROJECT_ID/$_IMAGE:latest || exit 0
  # build docker image
  - name: "gcr.io/cloud-builders/docker"
    id: "Build"
    args:
      [
          "build",
          "-t",
          "gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA",
          "--cache-from",
          "gcr.io/$PROJECT_ID/$_IMAGE:latest",
          "./backend/api-sales/",
      ]
  # push image to container registry
  - name: "gcr.io/cloud-builders/docker"
    id: "Push"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA"
  # set image in deployment.yaml
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Set image name"
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        sed -i "s/image: IMAGE/image: gcr.io\/$PROJECT_ID\/$_IMAGE:$SHORT_SHA/g" k8s/sales-deploy.yaml
  # get kubernetes credentials
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Authenticate kubernetes"
    args:
      [
          "container",
          "clusters",
          "get-credentials",
          "$_CLUSTER",
          "--zone",
          "$_ZONE",
      ]
  # deploy changes to kubernetes config files
  - name: "gcr.io/cloud-builders/kubectl"
    id: "Deploy sales app"
    args: ["apply", "-f", "k8s/sales-deploy.yaml"]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=gke-ctse-cluster'
  - name: "gcr.io/cloud-builders/kubectl"
    id: "Deploy sales service"
    args: [ "apply", "-f", "k8s/sales-service.yaml" ]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=gke-ctse-cluster'
  - name: "gcr.io/cloud-builders/kubectl"
    id: "Deploy ingress"
    args: [ "apply", "-f", "k8s/ingress.yaml" ]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=gke-ctse-cluster'
  - name: "gcr.io/cloud-builders/kubectl"
    id: "Deploy podscaler"
    args: [ "apply", "-f", "k8s/podscaler-sales.yaml" ]
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=gke-ctse-cluster'
  # add latest tag to new image
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Tag"
    args:
      [
          "container",
          "images",
          "add-tag",
          "gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA",
          gcr.io/$PROJECT_ID/$_IMAGE:latest,
      ]
